@import url(http://fonts.googleapis.com/css?family=Lato);
/* ------------------------------------------
  RESET
--------------------------------------------- */
body, div, h1, h2, h3, h4, h5, h6, p, blockquote, pre, dl, dt, dd, ol, ul, li, hr, fieldset, form, label, legend, th, td, article, aside, figure, footer, header, hgroup, menu, nav, section, summary, hgroup {
  margin: 0;
  padding: 0;
  border: 0; }

a:active, a:hover {
  outline: 0; }

@-webkit-viewport {
  width: device-width; }

@-moz-viewport {
  width: device-width; }

@-ms-viewport {
  width: device-width; }

@-o-viewport {
  width: device-width; }

@viewport {
  width: device-width; }

/** * Eric Meyer's Reset CSS v2.0 (http://meyerweb.com/eric/tools/css/reset/) * http://cssreset.com */
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after, q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

/*! normalize.css v3.0.1 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio, canvas, progress, video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden], template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active, a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b, strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code, kbd, pre, samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button, input, optgroup, select, textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button, select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled], html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"], input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td, th {
  padding: 0; }

@font-face {
  font-family: 'Proxima Nova Rg';
  src: url('../fonts/ProximaNova-Regular.eot');
  /* IE9 Compat Modes */
  src: url('../fonts/ProximaNova-Regular.eot?#iefix') format('embedded-opentype'), url('../fonts/ProximaNova-Regular.woff') format('woff'), url('../fonts/ProximaNova-Regular.ttf') format('truetype'), url('../fonts/ProximaNova-Regular.svg#2c1459d58560f08b4b0586fbe80aa4cd') format('svg');
  /* Legacy iOS */
  font-style: normal;
  font-weight: 400; }

@font-face {
  font-family: 'PT Sans Caption';
  src: url('../fonts/PTC55F.eot');
  /* IE9 Compat Modes */
  src: url('../fonts/PTC55F.eot?#iefix') format('embedded-opentype'), url('../fonts/PTC55F.woff') format('woff'), url('../fonts/PTC55F.ttf') format('truetype'), url('../fonts/PTC55F.svg#2b5fb73c587d9a3c1836201b0f3fa4b4') format('svg');
  /* Legacy iOS */
  font-style: normal;
  font-weight: 400; }

/*                    **
**   Default styles   **
**                    */
html, body {
  background: #eee;
  height: 100% !important;
  margin: 0;
  padding: 0; }

body {
  display: none;
  min-width: 320px;
  overflow-x: hidden; }

.wrapper {
  position: relative;
  width: 100%;
  z-index: 1000;
  top: 0;
  min-height: 100%;
  height: auto !important;
  /*margin: 0 auto -50px;*/
  margin: 0 auto; }

a {
  -webkit-transition: 350ms;
          transition: 350ms; }

/*------------Navbar------------*/
.navbar {
  background-color: #eeeeee;
  padding-top: 10px;
  padding-bottom: 20px;
  height: 100px !important;
  margin-bottom: 0;
  font-family: Lato;
  font-size: 14px; }
  .navbar a {
    color: #7a7a7a; }
  .navbar .active a {
    color: #00263f; }

.navbar-collapse {
  margin-top: 15px; }

.navbar-toggle {
  margin-top: 20px;
  border: 1px solid #b6c930; }

.navbar-toggle .icon-bar {
  background-color: #b6c930; }

li.active {
  border-bottom: 2px solid #b6c930; }

#logo img {
  width: 220px;
  height: 47px; }

.btn {
  width: 280px;
  height: 50px;
  background-color: #b5c92f;
  font-weight: bold;
  font-family: Lato;
  border-radius: 0; }

/*.push {
height: 50px;
}*/
.bottomLine {
  background-color: #0B1A37;
  height: auto;
  width: 100%;
  z-index: 1000;
  text-align: center;
  padding-top: 10px;
  overflow: hidden;
  color: #FFF; }
  .bottomLine h5 {
    max-width: 990px;
    margin: 0 auto;
    font-size: 14px; }

span.qrcodeicon span {
  position: absolute;
  display: block;
  top: 0px;
  right: 6px;
  width: 18px;
  height: 18px;
  background: url('../img/qrcode.png');
  cursor: pointer;
  z-index: 1; }

span.qrcodeicon {
  position: relative; }

.form-control {
  display: inherit; }

#outdiv {
  width: 320px;
  height: 240px; }

#v {
  width: 320px;
  height: 240px; }

#qr-canvas {
  display: none; }

#bitknote {
  height: 300px;
  width: 560px; }

.tooltip-inner {
  white-space: pre-wrap; }

h1 {
  font-family: 'Proxima Nova Rg';
  text-align: center;
  margin-top: 0;
  margin-bottom: 40px;
  text-transform: uppercase; }

.tranc {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis; }

/*footer */
.copyright {
  padding: 6px; }

.support {
  padding: 6px; }
  .support a {
    color: #fff; }
  .support .bitlink {
    color: #b6c930; }

.social {
  padding: 6px; }
  .social a {
    padding: 0 10px; }

/* INDEX PAGE */
/* index */
#message {
  background: #84B1D5 url("../img/bg-header.jpg") no-repeat;
  background-position: 50% 100%;
  height: 550px;
  text-align: center;
  padding-top: 90px; }
  #message p {
    font-family: 'Lato', sans-serif;
    margin-bottom: 14px;
    font-size: 17px; }
  #message .btn {
    margin-top: 30px; }

.hand-wrapper, .lock {
  position: relative !important; }

#just {
  background: #eee;
  padding-bottom: 100px;
  padding-top: 90px;
  overflow: hidden;
  position: relative; }
  #just p {
    font-family: 'PT Sans Caption';
    margin-bottom: 14px;
    font-size: 17px;
    line-height: 25px;
    letter-spacing: -1px; }
  #just .hand-wrapper.right {
    top: 0; }
    #just .hand-wrapper.right img {
      position: relative;
      z-index: 99; }
    #just .hand-wrapper.right .hand-line {
      display: none;
      z-index: 33; }

#becomes {
  background: #fff;
  text-align: center;
  padding-bottom: 100px;
  padding-top: 90px; }
  #becomes p {
    font-family: 'PT Sans Caption';
    margin-bottom: 14px;
    font-size: 17px;
    line-height: 25px;
    letter-spacing: -1px; }

#contribute {
  text-align: center;
  padding: 100px 0;
  background-color: #ff9c00; }
  #contribute p {
    font-family: 'PT Sans Caption';
    margin-bottom: 14px;
    font-size: 17px;
    line-height: 25px;
    letter-spacing: -1px; }

#contribute .content {
  position: relative; }

#even {
  background: #fff;
  padding-top: 100px; }
  #even p {
    font-family: 'PT Sans Caption';
    margin-bottom: 14px;
    font-size: 17px;
    line-height: 25px; }

#simple {
  background: #b6c930;
  text-align: center;
  padding-bottom: 50px;
  padding-top: 80px;
  position: relative;
  z-index: 2; }
  #simple p {
    font-family: 'PT Sans Caption';
    margin-bottom: 14px;
    font-size: 17px;
    line-height: 25px; }

#soulful {
  background: #eee;
  padding-bottom: 30px;
  padding-top: 100px;
  overflow: hidden;
  position: relative; }
  #soulful p {
    font-family: 'PT Sans Caption';
    margin-bottom: 14px;
    font-size: 17px;
    line-height: 25px;
    padding: 0 50px; }
  #soulful .hand-wrapper.left {
    top: 0; }
    #soulful .hand-wrapper.left img {
      position: relative;
      z-index: 99; }
    #soulful .hand-wrapper.left .hand-line {
      display: none;
      z-index: 33; }

#footer {
  background: #0B1A37;
  background: #0B1A37 url("../img/bg-foot.jpg") no-repeat;
  background-position: 50%;
  text-align: center;
  padding-bottom: 100px;
  padding-top: 100px;
  max-height: 550px;
  height: 550px;
  background-size: cover; }
  #footer p {
    font-family: 'PT Sans Caption';
    margin-bottom: 14px;
    font-size: 17px;
    line-height: 25px; }

#footer h1, #footer p {
  color: #fff; }

.lock {
  position: static; }

/* create */
.panels {
  margin-top: 50px;
  text-align: center;
  color: #fff; }

.attention-panel {
  background-color: #ff4b4c;
  margin-bottom: 10px; }

.service-info-panel {
  background-color: #69b74a;
  margin-bottom: 10px; }

.conditions {
  color: #333; }

/*pay off */
#id_status {
  color: #b6c930; }

#action {
  text-align: center;
  margin-top: 20px; }

.btn-action {
  text-align: center; }

@media (max-width: 767px) {
  .container {
    max-width: 100%;
    margin-left: auto;
    margin-right: auto; }
  a:hover {
    background-color: transparent !important; }
  .tranc {
    width: 100%; }
  .navbar-fixed-top {
    position: relative !important;
    top: auto; }
  .navbar-nav {
    background: #fff; }
  .lock {
    text-align: right; }
  #contribute {
    padding-top: 100px; }
  #just img {
    margin-right: -15px; }
  #even img {
    display: block;
    float: right; }
  #soulful img {
    margin-left: -15px; } }

@media (min-width: 768px) {
  .container {
    max-width: 768px;
    margin-left: auto;
    margin-right: auto; }
  .btn:hover {
    background-color: #CADF37; }
  h1 {
    font-size: 52px; }
  .navbar-collapse.collapse {
    float: right; }
  .navbar .container {
    max-width: 900px; }
  .nav > li > a:hover, .nav > li > a:focus {
    text-decoration: none;
    background-color: #DADADA; }
  .navbar-nav li {
    margin-left: 10px; }
    .navbar-nav li a {
      padding: 10px 6px 6px 6px; }
  #message {
    margin-top: 100px; }
  #just {
    height: 500px; }
    #just p {
      padding-right: 30px; }
    #just .hand-line {
      display: block !important;
      position: absolute;
      top: 61px;
      left: 288px;
      background-color: #0B1A37;
      height: 88px;
      width: 2000px; }
  #becomes {
    height: 400px; }
  #contribute {
    height: 450px;
    overflow: hidden; }
    #contribute .container {
      position: relative; }
    #contribute .mails-1, #contribute .mails-2 {
      position: absolute; }
      #contribute .mails-1 *, #contribute .mails-2 * {
        position: absolute;
        z-index: 33; }
    #contribute #m1_b {
      top: 10px;
      left: -60px; }
    #contribute #m1_m {
      top: 100px;
      left: -190px; }
    #contribute #m1_s {
      top: 200px;
      left: 40px; }
    #contribute #m2_b {
      top: 180px;
      left: 890px; }
    #contribute #m2_m {
      top: 24px;
      left: 1010px; }
    #contribute #m2_s {
      top: 120px;
      left: 1110px; }
  #even {
    height: 400px;
    padding-bottom: 100px; }
    #even p {
      padding-left: 10px;
      padding-right: 110px; }
  #simple {
    height: 360px; }
    #simple p {
      padding: 0 50px; }
  #soulful {
    height: 440px;
    position: relative; }
    #soulful .hand-line {
      display: block !important;
      position: absolute;
      top: 61px;
      right: 288px;
      background-color: #0B1A37;
      height: 88px;
      width: 2000px; }
  #footer h1 {
    margin-bottom: 50px; }
  #footer .btn {
    margin-top: 50px; }
  #footer p {
    padding: 0 50px; }
  .bottomLine {
    top: -webkit-calc(100% - 40px);
    top: calc(100% - 40px);
    position: fixed;
    bottom: 0; } }

@media (min-width: 992px) {
  .container {
    max-width: 992px;
    margin-left: auto;
    margin-right: auto; }
  #just p {
    padding-right: 0;
    padding-left: 50px; }
  #just .hand-line {
    left: 380px; }
  #soulful .hand-line {
    right: 300px; } }

@media (min-width: 1200px) {
  .container {
    max-width: 992px;
    margin-left: auto;
    margin-right: auto; } }
/*# sourceMappingURL=data:application/json;base64, */